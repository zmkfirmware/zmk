/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>

#include <layouts/cuddlykeyboards/ferris.dtsi>

&cuddlykeyboards_ferris_layout {
    transform = <&default_transform>;
};

/ {
    chosen {
        zephyr,display = &oled;
        zmk,physical-layout = &cuddlykeyboards_ferris_layout;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <10>;
        rows = <4>;
        map = <
        RC(0,4)  RC(0,3)  RC(0,2)  RC(0,1)  RC(0,0)  RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)
        RC(1,4)  RC(1,3)  RC(1,2)  RC(1,1)  RC(1,0)  RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9)
        RC(2,4)  RC(2,3)  RC(2,2)  RC(2,1)  RC(2,0)  RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9)
                                   RC(3,1)  RC(3,0)  RC(3,5) RC(3,6)
        >;
    };

    left_encoder1: left_encoder1 {
        compatible = "alps,ec11";
        steps = <80>;
        status = "disabled";
    };

    left_encoder2: left_encoder2 {
        compatible = "alps,ec11";
        steps = <80>;
        status = "disabled";
    };

    right_encoder1: right_encoder1 {
        compatible = "alps,ec11";
        steps = <80>;
        status = "disabled";
    };

    right_encoder2: right_encoder2 {
        compatible = "alps,ec11";
        steps = <80>;
        status = "disabled";
    };

    sensors: sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder1 &right_encoder1>;
        triggers-per-rotation = <20>;
    };
};

&pro_micro_i2c {
    status = "okay";

    oled: ssd1306@3c {
        compatible = "solomon,ssd1306fb";
        reg = <0x3c>;
        width = <128>;
        height = <32>;
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <31>;
        segment-remap;
        com-invdir;
        com-sequential;
        inversion-on;
        prechargep = <0x22>;
    };
};
