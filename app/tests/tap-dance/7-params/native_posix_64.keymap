#include <dt-bindings/zmk/keys.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/kscan_mock.h>

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        tdm: tap_dance_mixed {
            compatible = "zmk,behavior-tap-dance-param";
            #binding-cells = <2>;
            tapping-term-ms = <100>;
            bindings = <&ht PLACEHOLDER PLACEHOLDER>, <&ht C PLACEHOLDER>, <&ht PLACEHOLDER D>;
            binding-params = <BINDING_PARAM(2,1) BINDING_PARAM(0,1) BINDING_PARAM(2,0)>;
        };

        td2: tap_dance_basic {
            compatible = "zmk,behavior-tap-dance-param";
            #binding-cells = <2>;
            tapping-term-ms = <100>;
            bindings = <&kp PLACEHOLDER>, <&kp B>, <&kp PLACEHOLDER>;
            binding-params = <BINDING_PARAM(1,0) BINDING_PARAM(0,0) BINDING_PARAM(2,0)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
            &td2 A C &tdm A B
            &trans   &trans >;
        };
    };
};

&kscan {
    events = <
        ZMK_MOCK_PRESS(0,0,10)
        ZMK_MOCK_RELEASE(0,0,110)
        ZMK_MOCK_PRESS(0,0,10)
        ZMK_MOCK_RELEASE(0,0,10)
        ZMK_MOCK_PRESS(0,0,10)
        ZMK_MOCK_RELEASE(0,0,110)
        ZMK_MOCK_PRESS(0,0,10)
        ZMK_MOCK_RELEASE(0,0,10)
        ZMK_MOCK_PRESS(0,0,10)
        ZMK_MOCK_RELEASE(0,0,10)
        ZMK_MOCK_PRESS(0,0,10)
        ZMK_MOCK_RELEASE(0,0,110)

        ZMK_MOCK_PRESS(0,1,10)
        ZMK_MOCK_RELEASE(0,1,110)
        ZMK_MOCK_PRESS(0,1,10)
        ZMK_MOCK_RELEASE(0,1,10)
        ZMK_MOCK_PRESS(0,1,10)
        ZMK_MOCK_RELEASE(0,1,110)
        ZMK_MOCK_PRESS(0,1,10)
        ZMK_MOCK_RELEASE(0,1,10)
        ZMK_MOCK_PRESS(0,1,10)
        ZMK_MOCK_RELEASE(0,1,10)
        ZMK_MOCK_PRESS(0,1,10)
        ZMK_MOCK_RELEASE(0,1,110)

        ZMK_MOCK_PRESS(0,1,410)
        ZMK_MOCK_RELEASE(0,1,10)
        ZMK_MOCK_PRESS(0,1,10)
        ZMK_MOCK_RELEASE(0,1,10)
        ZMK_MOCK_PRESS(0,1,410)
        ZMK_MOCK_RELEASE(0,1,10)
        ZMK_MOCK_PRESS(0,1,10)
        ZMK_MOCK_RELEASE(0,1,10)
        ZMK_MOCK_PRESS(0,1,10)
        ZMK_MOCK_RELEASE(0,1,10)
        ZMK_MOCK_PRESS(0,1,410)
        ZMK_MOCK_RELEASE(0,1,10)
    >;
};